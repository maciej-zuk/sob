cmake_minimum_required(VERSION 2.8)
set(CMAKE_BUILD_TYPE Release)
aux_source_directory(../src SRC_LIST)
set(EXECUTABLE_OUTPUT_PATH ./sob-dist)
project(sob)
set(SDL2PATH "/usr/local" CACHE PATH "SDL2 prefix path")
set(VERBOSITYLEVEL "Info" CACHE STRING "Verbosity level")
set_property(CACHE VERBOSITYLEVEL PROPERTY STRINGS None Error Warning Info Debug Everything)
add_executable(${PROJECT_NAME} ${SRC_LIST})

execute_process(COMMAND grep -o BCM2708 /proc/cpuinfo OUTPUT_VARIABLE ONRPI)
if(${ONRPI} MATCHES "BCM2708")
set(ONRPI "YES")
else(${ONRPI} MATCHES "BCM2708")
set(ONRPI "NO")
endif(${ONRPI} MATCHES "BCM2708")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DVL${VERBOSITYLEVEL}=1 -g")
execute_process(COMMAND bash -c "git log --oneline | wc -l | tr -d '\n'" OUTPUT_VARIABLE VERSION)
execute_process(COMMAND bash -c "git log --oneline | head -n1 | cut -f1 -d ' ' | tr -d '\n'" OUTPUT_VARIABLE COMMIT)
execute_process(COMMAND bash -c "echo 'char vinfo[]=\"version ${VERSION} (commit: ${COMMIT})\";' > ../src/vinfo.h")
if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
  message("Target is Linux")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -I${SDL2PATH}/include")
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -L${SDL2PATH}/lib -Wl,-rpath,.:${SDL2PATH}/lib ")
  include(/usr/share/cmake-2.8/Modules/Platform/Linux-GNU-CXX.cmake)
  target_link_libraries(${PROJECT_NAME} pthread Box2D SDL2 SDL2_mixer zzip)
  if(${ONRPI})
  message("RPI support enabled")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DRPI -I/usr/include/lua5.1 -I/opt/vc/include/interface/vcos/pthreads -I/opt/vc/include/")
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -L/opt/vc/lib/")
  target_link_libraries(${PROJECT_NAME} GLESv2 EGL openmaxil bcm_host vcos vchiq_arm lua5.1 X11)
  else(${ONRPI})
  target_link_libraries(${PROJECT_NAME} GL GLU luajit-5.1)
  endif(${ONRPI})
endif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")

if(WIN32)
  message("Target is Win32")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mwindows")
  set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS)
  target_link_libraries(${PROJECT_NAME} opengl32 glu32 )
  target_link_libraries(${PROJECT_NAME} SDL2_mixer mikmod stdc++ vorbisfile vorbis m ogg zzip z)
  target_link_libraries(${PROJECT_NAME} pthread Box2D lua mingw32 SDL2main SDL2 winmm iconv m user32 gdi32 winmm dxguid)
#  set(CMAKE_CXX_FLAGS -static)
endif(WIN32)


add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD COMMAND cp -r ${PROJECT_SOURCE_DIR}/../data/data.zip ./sob-dist)
add_custom_command(OUTPUT sob.zip COMMAND zip -q sob.zip -r sob-dist/*)
add_custom_command(OUTPUT sob.tar.gz COMMAND rm -f sob.tar.gz COMMAND tar czf sob.tar.gz sob-dist)
add_custom_target(dist DEPENDS ${PROJECT_NAME} sob.zip sob.tar.gz)

message("CMAKE_CXX_FLAGS = ${CMAKE_CXX_FLAGS}")
message("CMAKE_EXE_LINKER_FLAGS = ${CMAKE_EXE_LINKER_FLAGS}")
